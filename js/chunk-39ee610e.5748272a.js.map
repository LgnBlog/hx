{"version":3,"sources":["webpack:///./src/views/incomingClient/template/pieCharts.vue?0ed6","webpack:///src/views/incomingClient/template/pieCharts.vue","webpack:///./src/views/incomingClient/template/pieCharts.vue?fbfc","webpack:///./src/views/incomingClient/template/pieCharts.vue","webpack:///./src/views/incomingClient/template/pieCharts.vue?30d4","webpack:///./src/base/api/channel-preference.js","webpack:///./src/base/mixin/channel-preference.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","lineDialogVisible","on","$event","directives","name","rawName","value","expression","slot","_v","staticStyle","gnflLimit","handleGnfl","model","callback","$$v","gnflValue","_l","item","key","label","gnxLimit","handleGnx","gnxValue","qdLimit","handleQd","qdValue","handleDate","hyfbWd","hyfbDate","getFunctionalActiveDistributionDetail","exportExcel","lineType","staticRenderFns","component","GET_FUNCTION_CHANNEL","CP_PATH","getFunctionChannel","data","ajax","method","headers","url","FUNCTION_DISTRIBUTION","functionDistribution","GET_BUSINESS_TYPE","getBusinessType","BUSINESS_SITUATION","businessSituation","GET_BUSINESS_CHANNEL","getBusinessChannel","BUSINESS_SITUATION_DETAIL","businessSituationDetail","GET_REGISTER_CHANNEL","getRegisterChannel","GET_DETAIL","getDetail","GET_NUMBER","getNumber","GET_TOTAL_NUMBER","getTotalNumber","FUNCTIONAL_ACTIVE_DISTRIBUTION","functionalActiveDistribution","GET_FUNCTION_DISTRIBUTION","getFunctionDistribution","GET_FEATURE","getFeature","FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL","functionalActiveDistributionDetail","GET_UNIT","getUnit","GET_TOP_TEN","getTopTen","GET_BUSINESS_SUBCLASS","getBusinessSubclass","GET_TOP_TEN_DETAIL","getTopTenDetail","SAVE_QDTJ","saveQdtj","GET_QD_RC_LIST","getQdRcList","DELETE_QD_RC_LIST","deleteQdRcList","GET_QD_RC_DEAIL","getQdRcDeail","TAG_BY_CUSTOMERS","tagByCustomers","DOWN_LOAD","downLoad","GET_QD_VISIT","getQdVisit","GET_QD_ANALYSIS","getQdAnalysis","EXECUTE_TASK","executeTask","UPDATE_CUSTOMERS_TOTAL","updateCustomersTotal","channelPreference","list","page","limit","total","methods","then","res"],"mappings":"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","file":"js/chunk-39ee610e.5748272a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pieCharts\"},[_c('div',{ref:\"pieCharts\",staticClass:\"bar_bda\"}),_c('el-dialog',{attrs:{\"title\":\"提示\",\"visible\":_vm.lineDialogVisible,\"width\":\"88%\"},on:{\"update:visible\":function($event){_vm.lineDialogVisible=$event}}},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.lineChartsLoading),expression:\"lineChartsLoading\"}],staticClass:\"line-charts\"}),_c('span',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticClass:\"table_title\"},[_vm._v(\"渠道功能分类明细\"),_c('br'),_c('span',{staticStyle:{\"font-weight\":\"normal\",\"font-size\":\"12px\",\"color\":\"#ff8000\"}},[_vm._v(\"功能分类、功能项、渠道只能选择一条多选\")])]),_c('span',{staticClass:\"label\"},[_vm._v(\"功能分类：\")]),_c('el-select',{staticStyle:{\"width\":\"160px\",\"margin-right\":\"10px\"},attrs:{\"multiple-limit\":_vm.gnflLimit,\"size\":\"mini\",\"multiple\":\"\",\"filterable\":\"\",\"collapse-tags\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"请选择业务类别\"},on:{\"change\":_vm.handleGnfl},model:{value:(_vm.gnflValue),callback:function ($$v) {_vm.gnflValue=$$v},expression:\"gnflValue\"}},_vm._l((_vm.gnflList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('span',{staticClass:\"label\"},[_vm._v(\"功能项：\")]),_c('el-select',{staticStyle:{\"width\":\"160px\",\"margin-right\":\"10px\"},attrs:{\"multiple-limit\":_vm.gnxLimit,\"size\":\"mini\",\"multiple\":\"\",\"filterable\":\"\",\"collapse-tags\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"请选择业务类别\"},on:{\"change\":_vm.handleGnx},model:{value:(_vm.gnxValue),callback:function ($$v) {_vm.gnxValue=$$v},expression:\"gnxValue\"}},_vm._l((_vm.gnxList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('span',{staticClass:\"label\"},[_vm._v(\"渠道：\")]),_c('el-select',{staticStyle:{\"width\":\"160px\",\"margin-right\":\"10px\"},attrs:{\"size\":\"mini\",\"multiple-limit\":_vm.qdLimit,\"multiple\":\"\",\"filterable\":\"\",\"collapse-tags\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"请选择渠道\"},on:{\"change\":_vm.handleQd},model:{value:(_vm.qdValue),callback:function ($$v) {_vm.qdValue=$$v},expression:\"qdValue\"}},_vm._l((_vm.qdOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('span',[_vm._v(\" 时间：\")]),_c('el-radio-group',{on:{\"change\":_vm.handleDate},model:{value:(_vm.hyfbWd),callback:function ($$v) {_vm.hyfbWd=$$v},expression:\"hyfbWd\"}},[_c('el-radio',{attrs:{\"label\":'年'}},[_vm._v(\"年\")]),_c('el-radio',{attrs:{\"label\":'月'}},[_vm._v(\"月\")]),_c('el-radio',{attrs:{\"label\":'日'}},[_vm._v(\"日\")])],1),_c('el-date-picker',{staticStyle:{\"width\":\"130px\"},attrs:{\"type\":_vm.hyfbWd==='年'?'year':(_vm.hyfbWd==='月'?'month':'date'),\"size\":\"mini\",\"placeholder\":\"选择日期\",\"value-format\":_vm.hyfbWd==='年'?'yyyy':(_vm.hyfbWd==='月'?'yyyy-MM':'yyyy-MM-dd')},model:{value:(_vm.hyfbDate),callback:function ($$v) {_vm.hyfbDate=$$v},expression:\"hyfbDate\"}}),_c('el-button',{staticStyle:{\"margin\":\"0px 10px\"},attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.getFunctionalActiveDistributionDetail}},[_vm._v(\"查询\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.exportExcel}},[_vm._v(\"导出Excel\")])],1),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-radio-group',{on:{\"change\":_vm.getFunctionalActiveDistributionDetail},model:{value:(_vm.lineType),callback:function ($$v) {_vm.lineType=$$v},expression:\"lineType\"}},[_c('el-radio',{attrs:{\"label\":'1'}},[_vm._v(\"分线\")]),_c('el-radio',{attrs:{\"label\":'2'}},[_vm._v(\"合线\")])],1)],1),_c('div',{ref:\"gnfnLineChart\",staticStyle:{\"height\":\"260px\",\"margin\":\"10px 8px\"}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.lineDialogVisible = false}}},[_vm._v(\"关闭\")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"pieCharts\">\r\n        <div ref=\"pieCharts\" class=\"bar_bda\"></div>\r\n        <el-dialog\r\n            title=\"提示\"\r\n            :visible.sync=\"lineDialogVisible\"\r\n            width=\"88%\">\r\n            <div class=\"line-charts\" v-loading=\"lineChartsLoading\">\r\n            </div>\r\n            <span slot=\"title\">\r\n                <span class=\"table_title\">渠道功能分类明细<br><span style=\"font-weight: normal;font-size: 12px;color: #ff8000\">功能分类、功能项、渠道只能选择一条多选</span></span>\r\n                <span class=\"label\">功能分类：</span>\r\n                <el-select\r\n                    :multiple-limit=\"gnflLimit\"\r\n                    @change=\"handleGnfl\"\r\n                    style=\"width: 160px;margin-right: 10px\"\r\n                    size=\"mini\"\r\n                    v-model=\"gnflValue\"\r\n                    multiple\r\n                    filterable\r\n                    collapse-tags\r\n                    allow-create\r\n                    default-first-option\r\n                    placeholder=\"请选择业务类别\">\r\n                    <el-option\r\n                        v-for=\"item in gnflList\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                 <span class=\"label\">功能项：</span>\r\n                <el-select\r\n                    :multiple-limit=\"gnxLimit\"\r\n                    @change=\"handleGnx\"\r\n                    style=\"width: 160px;margin-right: 10px\"\r\n                    size=\"mini\"\r\n                    v-model=\"gnxValue\"\r\n                    multiple\r\n                    filterable\r\n                    collapse-tags\r\n                    allow-create\r\n                    default-first-option\r\n                    placeholder=\"请选择业务类别\">\r\n                    <el-option\r\n                        v-for=\"item in gnxList\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                <span class=\"label\">渠道：</span>\r\n                    <el-select\r\n                        style=\"width: 160px;margin-right: 10px\"\r\n                        size=\"mini\"\r\n                        @change=\"handleQd\"\r\n                        :multiple-limit=\"qdLimit\"\r\n                        v-model=\"qdValue\"\r\n                        multiple\r\n                        filterable\r\n                        collapse-tags\r\n                        allow-create\r\n                        default-first-option\r\n                        placeholder=\"请选择渠道\">\r\n                    <el-option\r\n                        v-for=\"item in qdOptions\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                <span> 时间：</span>\r\n                <el-radio-group v-model=\"hyfbWd\" @change=\"handleDate\">\r\n                    <el-radio :label=\"'年'\">年</el-radio>\r\n                    <el-radio :label=\"'月'\">月</el-radio>\r\n                    <el-radio :label=\"'日'\">日</el-radio>\r\n                </el-radio-group>\r\n                <el-date-picker\r\n                    v-model=\"hyfbDate\"\r\n                    :type=\"hyfbWd==='年'?'year':(hyfbWd==='月'?'month':'date')\"\r\n                    style=\"width: 130px\"\r\n                    size=\"mini\"\r\n                    placeholder=\"选择日期\"\r\n                    :value-format=\"hyfbWd==='年'?'yyyy':(hyfbWd==='月'?'yyyy-MM':'yyyy-MM-dd')\">\r\n                </el-date-picker>\r\n                <el-button type=\"primary\" size=\"mini\" style=\"margin: 0px 10px\"\r\n                           @click=\"getFunctionalActiveDistributionDetail\">查询</el-button>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"exportExcel\">导出Excel</el-button>\r\n            </span>\r\n            <div style=\"text-align: center\">\r\n                <el-radio-group v-model=\"lineType\" @change=\"getFunctionalActiveDistributionDetail\">\r\n                    <el-radio :label=\"'1'\">分线</el-radio>\r\n                    <el-radio :label=\"'2'\">合线</el-radio>\r\n                </el-radio-group>\r\n            </div>\r\n            <div style=\"height: 260px;margin: 10px 8px\" ref=\"gnfnLineChart\"></div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"lineDialogVisible = false\" size=\"mini\">关闭</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {CP_PATH} from '@/config'\r\n  import Interface from '@/base/mixin/channel-preference';\r\n\r\n  let option = {\r\n    title: {\r\n      show: false,\r\n      text: '某站点用户访问来源',\r\n      subtext: '纯属虚构',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n    },\r\n    legend: {\r\n      show:false,\r\n      orient: 'vertical',\r\n      left: 'left',\r\n      top: '10',\r\n      data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n    },\r\n    series: [\r\n      {\r\n        name: '渠道',\r\n        type: 'pie',\r\n        radius: '70%',\r\n        center: ['50%', '50%'],\r\n        data: [\r\n          {value: 335, name: '直接访问'},\r\n          {value: 310, name: '邮件营销'},\r\n          {value: 234, name: '联盟广告'},\r\n          {value: 135, name: '视频广告'},\r\n          {value: 1548, name: '搜索引擎'}\r\n        ],\r\n        itemStyle: {\r\n          emphasis: {\r\n            itemStyle: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            },\r\n          },\r\n          normal:{\r\n            color:function(params) {\r\n              //自定义颜色\r\n              var colorList = [\r\n                '#46a1fc', '#49cbcb', '#55cb72', '#fbd43d', '#f3627b', '#FE8463',\r\n              ];\r\n              return colorList[params.dataIndex]\r\n            }\r\n          }\r\n        },\r\n      }\r\n    ]\r\n  };\r\n  export default {\r\n    name: \"pieCharts\",\r\n    mixins: [Interface],\r\n    components: {},\r\n    props: {\r\n      showClickTable:{\r\n        type:Boolean,\r\n        default(){\r\n          return true\r\n        }\r\n      },\r\n      titName:{\r\n        type:String,\r\n        default(){\r\n          return '渠道'\r\n        }\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        lineType:'1', //1==分线，2===和线\r\n        pieOption: option,\r\n        //弹窗\r\n        lineChartsLoading: false,\r\n        lineDialogVisible: false,\r\n        gnflValue: [],\r\n        gnflList: [],\r\n        gnxValue: [],\r\n        gnxList: [],\r\n        qdValue: [],\r\n        qdOptions: [],\r\n        hyfbWd: '月',\r\n        hyfbDate: '2021-2-1',\r\n\r\n        lineOption: {\r\n          title: {\r\n            show:false,\r\n            text: '折线图堆叠'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {\r\n            show:false\r\n            // data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '10',\r\n            top:'10',\r\n            containLabel: true\r\n          },\r\n          toolbox: {\r\n            feature: {\r\n              saveAsImage: {}\r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              name: '邮件营销',\r\n              type: 'line',\r\n              // stack: '总量',\r\n              color: '#266dd5',\r\n              data: [120, 132, 101, 134, 90, 230, 210],\r\n            },\r\n            {\r\n              name: '联盟广告',\r\n              type: 'line',\r\n              // stack: '总量',\r\n              color: '#61cb63',\r\n              data: [220, 182, 191, 234, 290, 330, 310]\r\n            },\r\n            {\r\n              name: '视频广告',\r\n              type: 'line',\r\n              // stack: '总量',\r\n              color: '#e58128',\r\n              data: [150, 232, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n              name: '直接访问',\r\n              type: 'line',\r\n              // stack: '总量',\r\n              color: '#3c86e0',\r\n              data: [320, 332, 301, 334, 390, 330, 320]\r\n            },\r\n            {\r\n              name: '搜索引擎',\r\n              type: 'line',\r\n              // stack: '总量',\r\n              color: '#1bc690',\r\n              data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n            }\r\n          ]\r\n        },\r\n\r\n        gnflLimit: 20,//多选限制条数\r\n        gnxLimit: 20,\r\n        qdLimit: 20,\r\n\r\n      }\r\n    },\r\n    mounted() {\r\n      this.pieOption.series[0].name = this.titName\r\n      this.init()\r\n    },\r\n    methods: {\r\n      //多选下拉限制条数\r\n      handleGnfl(){ //功能分类\r\n        if (this.gnflValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.qdLimit = 1\r\n        }else if (this.gnxValue.length>1){\r\n          this.gnflLimit = 1\r\n          this.qdLimit = 1\r\n        }else if(this.qdValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.gnflLimit = 1\r\n        }else {\r\n          this.gnflLimit = 20;//多选限制条数\r\n          this.gnxLimit = 20;//多选限制条数\r\n          this.qdLimit = 20;//多选限制条数\r\n        }\r\n      },\r\n      handleGnx(){  //功能项\r\n        if (this.gnflValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.qdLimit = 1\r\n        }else if (this.gnxValue.length>1){\r\n          this.gnflLimit = 1\r\n          this.qdLimit = 1\r\n        }else if(this.qdValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.gnflLimit = 1\r\n        }else {\r\n          this.gnflLimit = 20;//多选限制条数\r\n          this.gnxLimit = 20;//多选限制条数\r\n          this.qdLimit = 20;//多选限制条数\r\n        }\r\n      },\r\n      handleQd(){  //功能项\r\n        if (this.gnflValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.qdLimit = 1\r\n        }else if (this.gnxValue.length>1){\r\n          this.gnflLimit = 1\r\n          this.qdLimit = 1\r\n        }else if(this.qdValue.length>1){\r\n          this.gnxLimit = 1\r\n          this.gnflLimit = 1\r\n        }else {\r\n          this.gnflLimit = 20;//多选限制条数\r\n          this.gnxLimit = 20;//多选限制条数\r\n          this.qdLimit = 20;//多选限制条数\r\n        }\r\n      },\r\n      handleDate(){\r\n        this.hyfbDate = ''\r\n      },\r\n      init(legendData = [], seriesData = [], pieOptions = [],qdValue = [],hyfbWd='',hyfbDate) {\r\n        this.hyfbDate= hyfbDate\r\n        this.hyfbWd= hyfbWd\r\n        this.pieOption.legend.data = legendData;\r\n        this.pieOption.series[0].data = seriesData;\r\n        let echarts = require('echarts');\r\n        this.mychart = echarts.init(this.$refs.pieCharts)\r\n        this.mychart.setOption(this.pieOption);\r\n        let mychart = echarts.init(this.$refs.pieCharts, true)  //监听窗口变化重新加载\r\n        window.addEventListener(\"resize\", mychart.resize); //监听窗口变化重新加载\r\n\r\n\r\n        this.qdOptions = pieOptions;\r\n        this.qdValue = [qdValue];\r\n        //点击事件\r\n        let _this = this\r\n        this.mychart.off('click');\r\n        this.mychart.on('click', function (params) {\r\n          if (!_this.showClickTable){ //是否需要点击饼图展示表格\r\n            return\r\n          }\r\n          _this.lineDialogVisible = true\r\n          _this.GetFunctionDistribution(params)\r\n          _this.GetFeature()\r\n          _this.gnflValue = [params.data.name]//默认显示\r\n          _this.getFunctionalActiveDistributionDetail()\r\n        })\r\n      },\r\n      //获取功能分类下拉框数据\r\n      GetFunctionDistribution(params, options, pieValue) {\r\n        window.console.log(params)\r\n        this.getFunctionDistribution({}).then(res => {\r\n          if (res){\r\n            this.gnflList = res\r\n          }\r\n        })\r\n      },\r\n      //根据功能分类获取功能项下拉框数据\r\n      GetFeature() {\r\n        this.getFeature({}).then(res => {\r\n          if (res&&res[0]){\r\n            this.gnxList = res\r\n          }\r\n        })\r\n      },\r\n      //下拉选择\r\n      handleGnf(a, b) {\r\n        window.console.log(a)\r\n        window.console.log(b)\r\n\r\n      },\r\n      //查询\r\n      getFunctionalActiveDistributionDetail() {\r\n        this.lineChartsLoading = true\r\n        this.functionalActiveDistributionDetail({\r\n          \"functionChannel\": this.qdValue,\r\n          \"dimension\": this.hyfbWd,\r\n          \"time\": this.hyfbDate,\r\n          \"functionalClassification\": this.gnflValue,\r\n          \"feature\": this.gnxValue,\r\n          \"type\":this.lineType\r\n        }).then(res => {\r\n          if (this.lineType==='1'){\r\n            this.init2(res)\r\n          }else {\r\n            this.init2({'合线':res})\r\n          }\r\n        })\r\n\r\n        this.lineChartsLoading = false\r\n      },\r\n      //导出excel\r\n      exportExcel() {\r\n        (this.barrDate === undefined || this.barrDate === null) ? this.barrDate = [] : this.barrDate;\r\n        let startTime = ''\r\n        let endTime = ''\r\n        if (this.barrDate.length > 0) {\r\n          startTime = this.barrDate[0]\r\n          endTime = this.barrDate[1]\r\n        }\r\n        window.location.href = CP_PATH + '/internetChannelController/exportFunctionalActiveDetail' +\r\n          '?functionChannel=' + this.qdValue + '&dimension=' + this.hyfbWd + '&time=' + this.hyfbDate + '&functionalClassification=' + this.gnflValue+ '&feature=' +this.gnxValue+ '&type=' +this.lineType\r\n      },\r\n      //弹窗折线图\r\n      init2(data) {\r\n        this.lineOption.xAxis.data = [];\r\n        this.lineOption.series = [];\r\n        let series = []\r\n        for(let key in data){\r\n          series.push({\r\n            yD: data[key],\r\n            type: 'line',\r\n            name: key,\r\n            smooth: true\r\n          })\r\n        }\r\n        let colorArray = ['#3c86e0','#e0c53c','#14e5cd','#c96f20','#68b45b','#722dc1','#87dbc7','#0812d2']\r\n        for (let i =0;i<series.length;i++){\r\n          series[i].data = []\r\n          for (let j=0;j<series[i].yD.length;j++){\r\n            series[i].color = colorArray[i]\r\n            series[i].data.push(series[i].yD[j].num)\r\n            if (i===0){\r\n              this.lineOption.xAxis.data.push(series[i].yD[j].resultDate)\r\n            }\r\n          }\r\n        }\r\n        this.lineOption.series = series\r\n        let echarts = require('echarts');\r\n        this.mychart = echarts.init(this.$refs.gnfnLineChart)\r\n        this.mychart.setOption(this.lineOption,true);\r\n        let mychart = echarts.init(this.$refs.gnfnLineChart, true)  //监听窗口变化重新加载\r\n        window.addEventListener(\"resize\", mychart.resize); //监听窗口变化重新加载\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .pieCharts {\r\n        height: 100%;\r\n\r\n        .table_title {\r\n            font-weight: bold;\r\n            margin-right: 20px;\r\n        }\r\n\r\n        .bar_bda {\r\n            height: 100%;\r\n            min-height: 100px;\r\n        }\r\n\r\n    }\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pieCharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pieCharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./pieCharts.vue?vue&type=template&id=0c8afc8c&scoped=true&\"\nimport script from \"./pieCharts.vue?vue&type=script&lang=js&\"\nexport * from \"./pieCharts.vue?vue&type=script&lang=js&\"\nimport style0 from \"./pieCharts.vue?vue&type=style&index=0&id=0c8afc8c&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0c8afc8c\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pieCharts.vue?vue&type=style&index=0&id=0c8afc8c&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pieCharts.vue?vue&type=style&index=0&id=0c8afc8c&scoped=true&lang=scss&\"","/**\n *  居民用电行为分析及优化策略建议 api\n *  @module base/api/channelPreference\n *  @author coder\n */\n\n// CP_PATH\nimport {\n  CP_PATH\n} from '@/config'\n\n// ajax\nimport ajax from '@/utils/ajax'\n\n/**\n * 获取渠道的下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFunctionChannel'\n */\nexport const GET_FUNCTION_CHANNEL = CP_PATH + '/internetChannelController/getFunctionChannel'\n\n/**\n * 获取渠道的下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFunctionChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FUNCTION_CHANNEL\n  })\n}\n\n/**\n * 根据渠道、时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionDistribution'\n */\nexport const FUNCTION_DISTRIBUTION = CP_PATH + '/internetChannelController/functionDistribution'\n\n/**\n * 根据渠道、时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTION_DISTRIBUTION\n  })\n}\n\n/**\n * 获取业务类别下拉框选项功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessType'\n */\nexport const GET_BUSINESS_TYPE = CP_PATH + '/internetChannelController/getBusinessType'\n\n/**\n * 获取业务类别下拉框选项功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessType(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_TYPE\n  })\n}\n\n/**\n * 根据业务类别和时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/businessSituation'\n */\nexport const BUSINESS_SITUATION = CP_PATH + '/internetChannelController/businessSituation'\n\n/**\n * 根据业务类别和时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function businessSituation(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: BUSINESS_SITUATION\n  })\n}\n\n/**\n * 业务办理-获取渠道的下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessChannel'\n */\nexport const GET_BUSINESS_CHANNEL = CP_PATH + '/internetChannelController/getBusinessChannel'\n\n/**\n * 业务办理-获取渠道的下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_CHANNEL\n  })\n}\n\n/**\n * 业务办理-根据业务类别、渠道、时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/businessSituationDetail'\n */\nexport const BUSINESS_SITUATION_DETAIL = CP_PATH + '/internetChannelController/businessSituationDetail'\n\n/**\n * 业务办理-根据业务类别、渠道、时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function businessSituationDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: BUSINESS_SITUATION_DETAIL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getRegisterChannel'\n */\nexport const GET_REGISTER_CHANNEL = CP_PATH + '/internetChannelController/getRegisterChannel'\n\n/**\n * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getRegisterChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_REGISTER_CHANNEL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getDetail'\n */\nexport const GET_DETAIL = CP_PATH + '/internetChannelController/getDetail'\n\n/**\n * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_DETAIL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getNumber'\n */\nexport const GET_NUMBER = CP_PATH + '/internetChannelController/getNumber'\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getNumber(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_NUMBER\n  })\n}\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTotalNumber'\n */\nexport const GET_TOTAL_NUMBER = CP_PATH + '/internetChannelController/getTotalNumber'\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTotalNumber(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOTAL_NUMBER\n  })\n}\n\n/**\n * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionalActiveDistribution'\n */\nexport const FUNCTIONAL_ACTIVE_DISTRIBUTION = CP_PATH + '/internetChannelController/functionalActiveDistribution'\n\n/**\n * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionalActiveDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTIONAL_ACTIVE_DISTRIBUTION\n  })\n}\n\n/**\n * 获取功能分类下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFunctionDistribution'\n */\nexport const GET_FUNCTION_DISTRIBUTION = CP_PATH + '/internetChannelController/getFunctionDistribution'\n\n/**\n * 获取功能分类下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFunctionDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FUNCTION_DISTRIBUTION\n  })\n}\n\n/**\n * 根据功能分类获取功能项下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFeature'\n */\nexport const GET_FEATURE = CP_PATH + '/internetChannelController/getFeature'\n\n/**\n * 根据功能分类获取功能项下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFeature(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FEATURE\n  })\n}\n\n/**\n * 根据条件数据获取渠道功能分类明细\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionalActiveDistributionDetail'\n */\nexport const FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL = CP_PATH + '/internetChannelController/functionalActiveDistributionDetail'\n\n/**\n * 根据条件数据获取渠道功能分类明细\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionalActiveDistributionDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getUnit'\n */\nexport const GET_UNIT = CP_PATH + '/internetChannelController/getUnit'\n\n/**\n * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getUnit(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_UNIT\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTopTen'\n */\nexport const GET_TOP_TEN = CP_PATH + '/internetChannelController/getTopTen'\n\n/**\n * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTopTen(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOP_TEN\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessSubclass'\n */\nexport const GET_BUSINESS_SUBCLASS = CP_PATH + '/internetChannelController/getBusinessSubclass'\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessSubclass(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_SUBCLASS\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTopTenDetail'\n */\nexport const GET_TOP_TEN_DETAIL = CP_PATH + '/internetChannelController/getTopTenDetail'\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTopTenDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOP_TEN_DETAIL\n  })\n}\n\n/**\n * 保存及修改渠道推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/saveQdtj'\n */\nexport const SAVE_QDTJ = CP_PATH + '/qdtj/saveQdtj'\n\n/**\n * 保存及修改渠道推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function saveQdtj(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: SAVE_QDTJ\n  })\n}\n\n/**\n * 获取推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/list'\n */\nexport const GET_QD_RC_LIST = CP_PATH + '/qdtj/list'\n\n/**\n * 获取推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdRcList(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_RC_LIST\n  })\n}\n\n/**\n * 删除推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/delete'\n */\nexport const DELETE_QD_RC_LIST = CP_PATH + '/qdtj/delete'\n\n/**\n * 删除推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function deleteQdRcList(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: DELETE_QD_RC_LIST\n  })\n}\n\n/**\n * 获取详情\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/getDeail'\n */\nexport const GET_QD_RC_DEAIL = CP_PATH + '/qdtj/getDeail'\n\n/**\n * 获取详情\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdRcDeail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_RC_DEAIL\n  })\n}\n\n/**\n * 根据标签获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/customerConfig/tagByCustomers'\n */\nexport const TAG_BY_CUSTOMERS = CP_PATH + '/customerConfig/tagByCustomers'\n\n/**\n * 根据标签获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function tagByCustomers(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: TAG_BY_CUSTOMERS\n  })\n}\n\n/**\n * 下载详情\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/downLoad'\n */\nexport const DOWN_LOAD = CP_PATH + '/qdtj/downLoad'\n\n/**\n * 下载详情\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function downLoad(data) {\n  return ajax({\n    method: 'get',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: DOWN_LOAD\n  })\n}\n\n/**\n * 近一年远程渠道访问量分布情况\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getQDVisit'\n */\nexport const GET_QD_VISIT = CP_PATH + '/internetChannelController/getQDVisit'\n\n/**\n * 近一年远程渠道访问量分布情况\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdVisit(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_VISIT\n  })\n}\n\n/**\n * 近一年渠道转化率分布\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getQDAnalysis'\n */\nexport const GET_QD_ANALYSIS = CP_PATH + '/internetChannelController/getQDAnalysis'\n\n/**\n * 近一年渠道转化率分布\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdAnalysis(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_ANALYSIS\n  })\n}\n\n/**\n * 潜在过户数据核验\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/executeTask'\n */\nexport const EXECUTE_TASK = CP_PATH + '/qdtj/executeTask'\n\n/**\n * 潜在过户数据核验\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function executeTask(data) {\n  return ajax({\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: EXECUTE_TASK\n  })\n}\n\n/**\n * 渠道数据核验\n * @const\n * @type {String}\n * @default  '[CP_PATH]/customerConfig/updateCustomersTotal'\n */\nexport const UPDATE_CUSTOMERS_TOTAL = CP_PATH + '/customerConfig/updateCustomersTotal'\n\n/**\n * 渠道数据核验\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function updateCustomersTotal(data) {\n  return ajax({\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: UPDATE_CUSTOMERS_TOTAL\n  })\n}\n","/**\n *  居民用电行为分析及优化策略建议 mixin module\n *  @module base/mixin/channelPreference\n *  @author coder\n */\nimport {\n  getFunctionChannel,\n  functionDistribution,\n  getBusinessType,\n  businessSituation,\n  getBusinessChannel,\n  businessSituationDetail,\n  getRegisterChannel,\n  getDetail,\n  getNumber,\n  getTotalNumber,\n  functionalActiveDistribution,\n  getFunctionDistribution,\n  getFeature,\n  functionalActiveDistributionDetail,\n  getUnit,\n  getTopTen,\n  getBusinessSubclass,\n  getTopTenDetail,\n  saveQdtj,\n  getQdRcList,\n  deleteQdRcList,\n  getQdRcDeail,\n  tagByCustomers,\n  downLoad,\n  getQdVisit,\n  getQdAnalysis,\n  executeTask,\n  updateCustomersTotal\n} from '@/base/api/channel-preference'\n\n// mixin\nexport default {\n\n  /**\n   * 居民用电行为分析及优化策略建议数据存储载体对象\n   * @member channelPreference\n   * @property {Array} [list=[]] 获取居民用电行为分析及优化策略建议列表响应数据\n   * @property {number} [page=null] 获取居民用电行为分析及优化策略建议列表响应页码\n   * @property {number} [limit=null] 获取居民用电行为分析及优化策略建议列表页大小，每页记录条数\n   * @property {number} [total=0] 获取居民用电行为分析及优化策略建议列表数据记录总条数\n   * @property {object} [model=null] 获取居民用电行为分析及优化策略建议单条记录\n   */\n  data() {\n    return {\n      channelPreference: {\n        list: [],\n        page: null,\n        limit: null,\n        total: 0,\n        model: null\n      }\n    }\n  },\n  methods: {\n\n    /**\n     * 获取渠道的下拉框数据\n     * @function getFunctionChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFunctionChannel(data) {\n      return getFunctionChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据渠道、时间段获取数据\n     * @function functionDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionDistribution(data) {\n      return functionDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取业务类别下拉框选项功能\n     * @function getBusinessType\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessType(data) {\n      return getBusinessType(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据业务类别和时间段获取数据\n     * @function businessSituation\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    businessSituation(data) {\n      return businessSituation(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 业务办理-获取渠道的下拉框数据\n     * @function getBusinessChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessChannel(data) {\n      return getBusinessChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 业务办理-根据业务类别、渠道、时间段获取数据\n     * @function businessSituationDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    businessSituationDetail(data) {\n      return businessSituationDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n     * @function getRegisterChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getRegisterChannel(data) {\n      return getRegisterChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n     * @function getDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getDetail(data) {\n      return getDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-获取渠道的汇总数据功能\n     * @function getNumber\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getNumber(data) {\n      return getNumber(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n     * @function getTotalNumber\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTotalNumber(data) {\n      return getTotalNumber(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n     * @function functionalActiveDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionalActiveDistribution(data) {\n      return functionalActiveDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取功能分类下拉框数据\n     * @function getFunctionDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFunctionDistribution(data) {\n      return getFunctionDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据功能分类获取功能项下拉框数据\n     * @function getFeature\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFeature(data) {\n      return getFeature(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据条件数据获取渠道功能分类明细\n     * @function functionalActiveDistributionDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionalActiveDistributionDetail(data) {\n      return functionalActiveDistributionDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n     * @function getUnit\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getUnit(data) {\n      return getUnit(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n     * @function getTopTen\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTopTen(data) {\n      return getTopTen(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n     * @function getBusinessSubclass\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessSubclass(data) {\n      return getBusinessSubclass(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n     * @function getTopTenDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTopTenDetail(data) {\n      return getTopTenDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 保存及修改渠道推荐\n     * @function saveQdtj\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    saveQdtj(data) {\n      return saveQdtj(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取推荐\n     * @function getQdRcList\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdRcList(data) {\n      return getQdRcList(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 删除推荐\n     * @function deleteQdRcList\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    deleteQdRcList(data) {\n      return deleteQdRcList(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取详情\n     * @function getQdRcDeail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdRcDeail(data) {\n      return getQdRcDeail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据标签获取数据\n     * @function tagByCustomers\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    tagByCustomers(data) {\n      return tagByCustomers(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 下载详情\n     * @function downLoad\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    downLoad(data) {\n      return downLoad(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 近一年远程渠道访问量分布情况\n     * @function getQdVisit\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdVisit(data) {\n      return getQdVisit(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 近一年渠道转化率分布\n     * @function getQdAnalysis\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdAnalysis(data) {\n      return getQdAnalysis(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 潜在过户数据核验\n     * @function executeTask\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    executeTask(data) {\n      return executeTask(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 渠道数据核验\n     * @function updateCustomersTotal\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    updateCustomersTotal(data) {\n      return updateCustomersTotal(data).then(res => {\n        return res\n      })\n    }\n  }\n}\n"],"sourceRoot":""}