{"version":3,"sources":["webpack:///./src/views/seatSkills/components/acrossBar.vue?c221","webpack:///src/views/seatSkills/components/acrossBar.vue","webpack:///./src/views/seatSkills/components/acrossBar.vue?9035","webpack:///./src/views/seatSkills/components/acrossBar.vue","webpack:///./src/base/api/channel-preference.js","webpack:///./src/base/mixin/channel-preference.js","webpack:///./src/views/seatSkills/components/acrossBar.vue?b7fd"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","staticRenderFns","component","GET_FUNCTION_CHANNEL","CP_PATH","getFunctionChannel","data","ajax","method","headers","url","FUNCTION_DISTRIBUTION","functionDistribution","GET_BUSINESS_TYPE","getBusinessType","BUSINESS_SITUATION","businessSituation","GET_BUSINESS_CHANNEL","getBusinessChannel","BUSINESS_SITUATION_DETAIL","businessSituationDetail","GET_REGISTER_CHANNEL","getRegisterChannel","GET_DETAIL","getDetail","GET_NUMBER","getNumber","GET_TOTAL_NUMBER","getTotalNumber","FUNCTIONAL_ACTIVE_DISTRIBUTION","functionalActiveDistribution","GET_FUNCTION_DISTRIBUTION","getFunctionDistribution","GET_FEATURE","getFeature","FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL","functionalActiveDistributionDetail","GET_UNIT","getUnit","GET_TOP_TEN","getTopTen","GET_BUSINESS_SUBCLASS","getBusinessSubclass","GET_TOP_TEN_DETAIL","getTopTenDetail","SAVE_QDTJ","saveQdtj","GET_QD_RC_LIST","getQdRcList","DELETE_QD_RC_LIST","deleteQdRcList","GET_QD_RC_DEAIL","getQdRcDeail","TAG_BY_CUSTOMERS","tagByCustomers","DOWN_LOAD","downLoad","GET_QD_VISIT","getQdVisit","GET_QD_ANALYSIS","getQdAnalysis","EXECUTE_TASK","executeTask","UPDATE_CUSTOMERS_TOTAL","updateCustomersTotal","channelPreference","list","page","limit","total","model","methods","then","res"],"mappings":"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","file":"js/chunk-4469cf4e.7c6c8de9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"acrossBar\"},[_c('div',{ref:\"acrossBarSon\",staticClass:\"acrossBar_chart\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"acrossBar\">\r\n        <div ref=\"acrossBarSon\" class=\"acrossBar_chart\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import Interface from '@/base/mixin/channel-preference';\r\n  let option ={\r\n    dataset: {\r\n      source: [\r\n        // ['score',  'product'],\r\n        // [89.3,  'Matcha'],\r\n        // [57.1,  'Milk'],\r\n        // [74.4,  'Cheese'],\r\n        // [89.7,  'Matcha'],\r\n        // [68.1,  'Tea'],\r\n        // [19.6,  'Orange'],\r\n        // [10.6,  'Lemon'],\r\n        // [32.7, 'Walnut']\r\n      ]\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n      }\r\n    },\r\n    grid: {\r\n      containLabel: true,\r\n      top : 0,    //距离容器上边界40像素\r\n      bottom: 10,   //距离容器下边界30像素\r\n      left:10,\r\n      right:30,\r\n    },\r\n    xAxis: {\r\n      name: ' ',\r\n      axisTick: {\r\n        show: true  //坐标轴刻度线\r\n      },\r\n      axisLine: { //轴线\r\n        show: false\r\n      },\r\n      splitLine:{ //网格线\r\n        show:true\r\n      },\r\n      axisLabel: { //坐标轴样式\r\n        textStyle: {\r\n          color: '#636363'\r\n        }\r\n      }},\r\n    yAxis: {\r\n      type: 'category',\r\n      axisLine: {\r\n        show: false\r\n      },\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        textStyle: {\r\n          color: '#636363'\r\n        }\r\n      }},\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n          color: '#e7fcff'\r\n        },\r\n        encode: {\r\n          // Map the \"amount\" column to X axis.\r\n          x: 'score',\r\n          // Map the \"product\" column to Y axis\r\n          y: 'product'\r\n        },\r\n        barMaxWidth : 32,//柱图宽度\r\n        itemStyle: {\r\n          normal: {\r\n            //这里是重点\r\n            color: function(params) {\r\n              //注意，如果颜色太少的话，后面颜色不会自动循环，最好多定义几个颜色\r\n              var colorList = ['#264bcd','#00cbcb', '#61a0a8', '#d48265', '#91c7ae','#749f83', '#ca8622'];\r\n              return colorList[params.dataIndex]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  export default {\r\n    name: \"acrossBar\",\r\n    mixins: [Interface],\r\n    components:{\r\n\r\n    },\r\n    props:{\r\n\r\n    },\r\n    data(){\r\n      return {\r\n        barOption:option,\r\n      }\r\n    },\r\n    mounted() {\r\n    },\r\n    methods:{\r\n\r\n      //查询\r\n      getFunctionalActiveDistributionDetail() {\r\n        this.lineChartsLoading = true\r\n        this.getTopTenDetail({\r\n          \"cities\": this.qdValue,\r\n          \"dimension\": this.hyfbWd,\r\n          \"time\": this.hyfbDate,\r\n          \"businessType\": this.gnflValue,\r\n          \"businessSubclass\": this.gnxValue\r\n        }).then(res => {\r\n          this.init2(res)\r\n        })\r\n\r\n        this.lineChartsLoading = false\r\n      },\r\n      init(data=[['score',  'product']]){\r\n        this.barOption.dataset.source = data\r\n        let echarts = require('echarts');\r\n        this.mychart = echarts.init(this.$refs.acrossBarSon)\r\n        this.mychart.setOption(this.barOption);\r\n        let mychart = echarts.init(this.$refs.acrossBarSon, true)  //监听窗口变化重新加载\r\n        window.addEventListener(\"resize\", mychart.resize); //监听窗口变化重新加载\r\n        // this.qdOptions = pieOptions\r\n        //点击事件\r\n        let _this = this\r\n        this.mychart.off('click');\r\n        this.mychart.on('click', function (params) {\r\n          _this.$emit('sendParams',params)\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .acrossBar{\r\n        height: 100%;\r\n        .acrossBar_chart{\r\n            height: 100%;\r\n            width: 100%;\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./acrossBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./acrossBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./acrossBar.vue?vue&type=template&id=60ccdc95&scoped=true&\"\nimport script from \"./acrossBar.vue?vue&type=script&lang=js&\"\nexport * from \"./acrossBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./acrossBar.vue?vue&type=style&index=0&id=60ccdc95&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"60ccdc95\",\n  null\n  \n)\n\nexport default component.exports","/**\n *  居民用电行为分析及优化策略建议 api\n *  @module base/api/channelPreference\n *  @author coder\n */\n\n// CP_PATH\nimport {\n  CP_PATH\n} from '@/config'\n\n// ajax\nimport ajax from '@/utils/ajax'\n\n/**\n * 获取渠道的下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFunctionChannel'\n */\nexport const GET_FUNCTION_CHANNEL = CP_PATH + '/internetChannelController/getFunctionChannel'\n\n/**\n * 获取渠道的下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFunctionChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FUNCTION_CHANNEL\n  })\n}\n\n/**\n * 根据渠道、时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionDistribution'\n */\nexport const FUNCTION_DISTRIBUTION = CP_PATH + '/internetChannelController/functionDistribution'\n\n/**\n * 根据渠道、时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTION_DISTRIBUTION\n  })\n}\n\n/**\n * 获取业务类别下拉框选项功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessType'\n */\nexport const GET_BUSINESS_TYPE = CP_PATH + '/internetChannelController/getBusinessType'\n\n/**\n * 获取业务类别下拉框选项功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessType(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_TYPE\n  })\n}\n\n/**\n * 根据业务类别和时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/businessSituation'\n */\nexport const BUSINESS_SITUATION = CP_PATH + '/internetChannelController/businessSituation'\n\n/**\n * 根据业务类别和时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function businessSituation(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: BUSINESS_SITUATION\n  })\n}\n\n/**\n * 业务办理-获取渠道的下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessChannel'\n */\nexport const GET_BUSINESS_CHANNEL = CP_PATH + '/internetChannelController/getBusinessChannel'\n\n/**\n * 业务办理-获取渠道的下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_CHANNEL\n  })\n}\n\n/**\n * 业务办理-根据业务类别、渠道、时间段获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/businessSituationDetail'\n */\nexport const BUSINESS_SITUATION_DETAIL = CP_PATH + '/internetChannelController/businessSituationDetail'\n\n/**\n * 业务办理-根据业务类别、渠道、时间段获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function businessSituationDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: BUSINESS_SITUATION_DETAIL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getRegisterChannel'\n */\nexport const GET_REGISTER_CHANNEL = CP_PATH + '/internetChannelController/getRegisterChannel'\n\n/**\n * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getRegisterChannel(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_REGISTER_CHANNEL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getDetail'\n */\nexport const GET_DETAIL = CP_PATH + '/internetChannelController/getDetail'\n\n/**\n * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_DETAIL\n  })\n}\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getNumber'\n */\nexport const GET_NUMBER = CP_PATH + '/internetChannelController/getNumber'\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getNumber(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_NUMBER\n  })\n}\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTotalNumber'\n */\nexport const GET_TOTAL_NUMBER = CP_PATH + '/internetChannelController/getTotalNumber'\n\n/**\n * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTotalNumber(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOTAL_NUMBER\n  })\n}\n\n/**\n * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionalActiveDistribution'\n */\nexport const FUNCTIONAL_ACTIVE_DISTRIBUTION = CP_PATH + '/internetChannelController/functionalActiveDistribution'\n\n/**\n * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionalActiveDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTIONAL_ACTIVE_DISTRIBUTION\n  })\n}\n\n/**\n * 获取功能分类下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFunctionDistribution'\n */\nexport const GET_FUNCTION_DISTRIBUTION = CP_PATH + '/internetChannelController/getFunctionDistribution'\n\n/**\n * 获取功能分类下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFunctionDistribution(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FUNCTION_DISTRIBUTION\n  })\n}\n\n/**\n * 根据功能分类获取功能项下拉框数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getFeature'\n */\nexport const GET_FEATURE = CP_PATH + '/internetChannelController/getFeature'\n\n/**\n * 根据功能分类获取功能项下拉框数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getFeature(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_FEATURE\n  })\n}\n\n/**\n * 根据条件数据获取渠道功能分类明细\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/functionalActiveDistributionDetail'\n */\nexport const FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL = CP_PATH + '/internetChannelController/functionalActiveDistributionDetail'\n\n/**\n * 根据条件数据获取渠道功能分类明细\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function functionalActiveDistributionDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: FUNCTIONAL_ACTIVE_DISTRIBUTION_DETAIL\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getUnit'\n */\nexport const GET_UNIT = CP_PATH + '/internetChannelController/getUnit'\n\n/**\n * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getUnit(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_UNIT\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTopTen'\n */\nexport const GET_TOP_TEN = CP_PATH + '/internetChannelController/getTopTen'\n\n/**\n * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTopTen(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOP_TEN\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getBusinessSubclass'\n */\nexport const GET_BUSINESS_SUBCLASS = CP_PATH + '/internetChannelController/getBusinessSubclass'\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getBusinessSubclass(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_BUSINESS_SUBCLASS\n  })\n}\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getTopTenDetail'\n */\nexport const GET_TOP_TEN_DETAIL = CP_PATH + '/internetChannelController/getTopTenDetail'\n\n/**\n * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getTopTenDetail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_TOP_TEN_DETAIL\n  })\n}\n\n/**\n * 保存及修改渠道推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/saveQdtj'\n */\nexport const SAVE_QDTJ = CP_PATH + '/qdtj/saveQdtj'\n\n/**\n * 保存及修改渠道推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function saveQdtj(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: SAVE_QDTJ\n  })\n}\n\n/**\n * 获取推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/list'\n */\nexport const GET_QD_RC_LIST = CP_PATH + '/qdtj/list'\n\n/**\n * 获取推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdRcList(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_RC_LIST\n  })\n}\n\n/**\n * 删除推荐\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/delete'\n */\nexport const DELETE_QD_RC_LIST = CP_PATH + '/qdtj/delete'\n\n/**\n * 删除推荐\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function deleteQdRcList(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: DELETE_QD_RC_LIST\n  })\n}\n\n/**\n * 获取详情\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/getDeail'\n */\nexport const GET_QD_RC_DEAIL = CP_PATH + '/qdtj/getDeail'\n\n/**\n * 获取详情\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdRcDeail(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_RC_DEAIL\n  })\n}\n\n/**\n * 根据标签获取数据\n * @const\n * @type {String}\n * @default  '[CP_PATH]/customerConfig/tagByCustomers'\n */\nexport const TAG_BY_CUSTOMERS = CP_PATH + '/customerConfig/tagByCustomers'\n\n/**\n * 根据标签获取数据\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function tagByCustomers(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: TAG_BY_CUSTOMERS\n  })\n}\n\n/**\n * 下载详情\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/downLoad'\n */\nexport const DOWN_LOAD = CP_PATH + '/qdtj/downLoad'\n\n/**\n * 下载详情\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function downLoad(data) {\n  return ajax({\n    method: 'get',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: DOWN_LOAD\n  })\n}\n\n/**\n * 近一年远程渠道访问量分布情况\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getQDVisit'\n */\nexport const GET_QD_VISIT = CP_PATH + '/internetChannelController/getQDVisit'\n\n/**\n * 近一年远程渠道访问量分布情况\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdVisit(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_VISIT\n  })\n}\n\n/**\n * 近一年渠道转化率分布\n * @const\n * @type {String}\n * @default  '[CP_PATH]/internetChannelController/getQDAnalysis'\n */\nexport const GET_QD_ANALYSIS = CP_PATH + '/internetChannelController/getQDAnalysis'\n\n/**\n * 近一年渠道转化率分布\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function getQdAnalysis(data) {\n  return ajax({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: GET_QD_ANALYSIS\n  })\n}\n\n/**\n * 潜在过户数据核验\n * @const\n * @type {String}\n * @default  '[CP_PATH]/qdtj/executeTask'\n */\nexport const EXECUTE_TASK = CP_PATH + '/qdtj/executeTask'\n\n/**\n * 潜在过户数据核验\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function executeTask(data) {\n  return ajax({\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: EXECUTE_TASK\n  })\n}\n\n/**\n * 渠道数据核验\n * @const\n * @type {String}\n * @default  '[CP_PATH]/customerConfig/updateCustomersTotal'\n */\nexport const UPDATE_CUSTOMERS_TOTAL = CP_PATH + '/customerConfig/updateCustomersTotal'\n\n/**\n * 渠道数据核验\n * @param {object} [data] 发送键值对数据\n * @returns {promise}\n */\nexport function updateCustomersTotal(data) {\n  return ajax({\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf8\"\n    },\n    data: data,\n    url: UPDATE_CUSTOMERS_TOTAL\n  })\n}\n","/**\n *  居民用电行为分析及优化策略建议 mixin module\n *  @module base/mixin/channelPreference\n *  @author coder\n */\nimport {\n  getFunctionChannel,\n  functionDistribution,\n  getBusinessType,\n  businessSituation,\n  getBusinessChannel,\n  businessSituationDetail,\n  getRegisterChannel,\n  getDetail,\n  getNumber,\n  getTotalNumber,\n  functionalActiveDistribution,\n  getFunctionDistribution,\n  getFeature,\n  functionalActiveDistributionDetail,\n  getUnit,\n  getTopTen,\n  getBusinessSubclass,\n  getTopTenDetail,\n  saveQdtj,\n  getQdRcList,\n  deleteQdRcList,\n  getQdRcDeail,\n  tagByCustomers,\n  downLoad,\n  getQdVisit,\n  getQdAnalysis,\n  executeTask,\n  updateCustomersTotal\n} from '@/base/api/channel-preference'\n\n// mixin\nexport default {\n\n  /**\n   * 居民用电行为分析及优化策略建议数据存储载体对象\n   * @member channelPreference\n   * @property {Array} [list=[]] 获取居民用电行为分析及优化策略建议列表响应数据\n   * @property {number} [page=null] 获取居民用电行为分析及优化策略建议列表响应页码\n   * @property {number} [limit=null] 获取居民用电行为分析及优化策略建议列表页大小，每页记录条数\n   * @property {number} [total=0] 获取居民用电行为分析及优化策略建议列表数据记录总条数\n   * @property {object} [model=null] 获取居民用电行为分析及优化策略建议单条记录\n   */\n  data() {\n    return {\n      channelPreference: {\n        list: [],\n        page: null,\n        limit: null,\n        total: 0,\n        model: null\n      }\n    }\n  },\n  methods: {\n\n    /**\n     * 获取渠道的下拉框数据\n     * @function getFunctionChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFunctionChannel(data) {\n      return getFunctionChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据渠道、时间段获取数据\n     * @function functionDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionDistribution(data) {\n      return functionDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取业务类别下拉框选项功能\n     * @function getBusinessType\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessType(data) {\n      return getBusinessType(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据业务类别和时间段获取数据\n     * @function businessSituation\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    businessSituation(data) {\n      return businessSituation(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 业务办理-获取渠道的下拉框数据\n     * @function getBusinessChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessChannel(data) {\n      return getBusinessChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 业务办理-根据业务类别、渠道、时间段获取数据\n     * @function businessSituationDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    businessSituationDetail(data) {\n      return businessSituationDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-渠道条件下拉框列表数据获取功能\n     * @function getRegisterChannel\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getRegisterChannel(data) {\n      return getRegisterChannel(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-按渠道获取各地市的数据功能\n     * @function getDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getDetail(data) {\n      return getDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-获取渠道的汇总数据功能\n     * @function getNumber\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getNumber(data) {\n      return getNumber(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道注册数分布-获取渠道的汇总数据功能图表  \n     * @function getTotalNumber\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTotalNumber(data) {\n      return getTotalNumber(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 渠道功能活跃分布-根据渠道、时间和时间维度获取数据  \n     * @function functionalActiveDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionalActiveDistribution(data) {\n      return functionalActiveDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取功能分类下拉框数据\n     * @function getFunctionDistribution\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFunctionDistribution(data) {\n      return getFunctionDistribution(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据功能分类获取功能项下拉框数据\n     * @function getFeature\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getFeature(data) {\n      return getFeature(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据条件数据获取渠道功能分类明细\n     * @function functionalActiveDistributionDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    functionalActiveDistributionDetail(data) {\n      return functionalActiveDistributionDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-获取单位下拉框数据功能\n     * @function getUnit\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getUnit(data) {\n      return getUnit(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按单位和时间获取前10业务类型数量功能\n     * @function getTopTen\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTopTen(data) {\n      return getTopTen(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按业务类别获取业务子类下拉框功能\n     * @function getBusinessSubclass\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getBusinessSubclass(data) {\n      return getBusinessSubclass(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 互联网渠道办理业务TOP10排名-按业务类、业务子类、单位、时间和时间维度等获取平均值数据\n     * @function getTopTenDetail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getTopTenDetail(data) {\n      return getTopTenDetail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 保存及修改渠道推荐\n     * @function saveQdtj\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    saveQdtj(data) {\n      return saveQdtj(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取推荐\n     * @function getQdRcList\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdRcList(data) {\n      return getQdRcList(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 删除推荐\n     * @function deleteQdRcList\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    deleteQdRcList(data) {\n      return deleteQdRcList(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 获取详情\n     * @function getQdRcDeail\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdRcDeail(data) {\n      return getQdRcDeail(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 根据标签获取数据\n     * @function tagByCustomers\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    tagByCustomers(data) {\n      return tagByCustomers(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 下载详情\n     * @function downLoad\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    downLoad(data) {\n      return downLoad(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 近一年远程渠道访问量分布情况\n     * @function getQdVisit\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdVisit(data) {\n      return getQdVisit(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 近一年渠道转化率分布\n     * @function getQdAnalysis\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    getQdAnalysis(data) {\n      return getQdAnalysis(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 潜在过户数据核验\n     * @function executeTask\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    executeTask(data) {\n      return executeTask(data).then(res => {\n        return res\n      })\n    },\n    /**\n     * 渠道数据核验\n     * @function updateCustomersTotal\n     * @param {object} data 请求发送的数据data\n     * @returns {Promise} Promise实例\n     */\n    updateCustomersTotal(data) {\n      return updateCustomersTotal(data).then(res => {\n        return res\n      })\n    }\n  }\n}\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./acrossBar.vue?vue&type=style&index=0&id=60ccdc95&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./acrossBar.vue?vue&type=style&index=0&id=60ccdc95&scoped=true&lang=scss&\""],"sourceRoot":""}